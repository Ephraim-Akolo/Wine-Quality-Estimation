#:set transparent_blue (65/255, 105/255, 225/255, .2)
#:set background_blue (213/255, 221/255, 245/255, 1)
#:set blue (65/255, 105/255, 225/255, 1)
#:set grey (.2, .2, .2, .8)

#:import Factory kivy.factory.Factory
#:import about_features about_features
<MyPopup@Popup>:
    BoxLayout:
        orientation:'vertical'
        ScrollView:
            MDList:
                BoxLayout:
                    orientation:'vertical'
                    size_hint_y: None
                    height: '3700dp'
                    MDLabel:
                        size_hint_x: None
                        width: '250dp'
                        markup: True
                        text: about_features.about
                        theme_text_color: "Custom"
                        text_color: "white"
                        pos_hint: {"center_x": .5}
        Button:
            text: 'Close me!'
            on_release: root.dismiss()
            size_hint: None, None
            size: "200dp", "50dp"
            pos_hint: {"center_x": .5}

Manager:
    Screen:
        name: "screen1"
        BoxLayout:
            orientation:'horizontal'
            canvas.before:
                Color:
                    rgba: transparent_blue
                Rectangle:
                    pos: self.pos
                    size: self.size
                Line:
                    rounded_rectangle: (dp(self.width//2 -100), dp(self.height//2 -110), 200, 200, 15)
            BoxLayout:
                orientation:'vertical'
                size_hint: 1, None
                pos_hint: {"center_y": .5}
                spacing: '10dp'
                MDRaisedButton:
                    markup: True
                    text: '[b] Statical Model  [/b]'
                    text_color: (1, 1, 1, .95)
                    md_bg_color: blue
                    pos_hint: {"center_x": .5,}   
                    on_release:
                        root.load_SM()
                        root.transition.direction = "left"
                        root.current = "screen2"
                        finput.focus = True                 
                MDRectangleFlatButton:
                    markup: True
                    text: '[b]Neural Network[/b]'
                    theme_text_color: "Custom"
                    text_color: grey
                    line_color: blue
                    pos_hint: {"center_x": .5}
                    on_release:
                        root.load_NN()
                        root.transition.direction = "left"
                        root.current = "screen4"
                        finput.focus = True
        Label:
            size_hint: None, None
            height: "50dp"
            width: "110dp"
            canvas.before:
                Color:
                    rgba: background_blue
                Rectangle:
                    pos: self.pos
                    size: self.size
            text:'load a model'
            pos: dp(self.parent.width//2 - self.width/2), dp(self.parent.height//2 +64)
            color: grey

        FloatLayout:
            Label:
                markup: True
                text:'[b]Wine Quality Estimator [/b]' if root.width > 400 else '[b]Wine Quality\n   Estimator [/b]'
                size_hint: None, None
                color: grey
                font_size: "30dp" 
                pos_hint: {"top": .9, "center_x": .5}

    
    Screen:
        name: "screen2"
        BoxLayout:
            orientation:'vertical'
            RelativeLayout:
                size_hint_y: .1
                canvas.before:
                    Color:
                        rgba: transparent_blue
                    Rectangle:
                        size: self.size
                MDIconButton:
                    icon: "arrow-left-bold"
                    pos_hint: {'center_y': .5}
                    theme_text_color: "Custom"
                    text_color: blue
                    on_release: 
                        root.transition.direction = "right"
                        root.current = "screen1"
                
                Label:
                    markup: True
                    text:'[b]Wine Features[/b]'
                    pos_hint: {"center_x": .5 if root.width > 500 else .4}
                    color: grey
                    font_size: "20dp"
                MDTextButton:
                    theme_text_color: "Custom"
                    text_color: blue
                    text: 'Features?'
                    pos_hint: {"right": .97, "center_y": .5}   
                    on_release: Factory.MyPopup().open()
                        
            BoxLayout:
                orientation:'vertical'
                MDLabel:
                    id: label
                    markup: True
                    text:"Input wine's [color=#4169e1]{}[/color]".format(root._wine_features[root._current_feature])
                    halign: "center"
                    size_hint_y: None
                RelativeLayout:
                    size_hint_x: None
                    width: "300dp"
                    pos_hint: {"center_x": .5}
                    BoxLayout:
                        orientation:'horizontal'
                        spacing: '20dp'
                        size_hint_y: None
                        height: finput.height
                        pos_hint: {"center_y": .7}
                        MDRaisedButton:
                            markup: True
                            text: 'previous'
                            text_color: (1, 1, 1, .95)
                            md_bg_color: blue
                            pos_hint: {"center_y": .45}
                            on_release:
                                root._prev_feature(label, finput)
                        FeaturesInput:
                            id: finput
                            hint_text: "11 left"
                            helper_text: "required"
                            helper_text_mode: "on_error"
                            required: False
                            theme_text_color: "Custom"
                            color_mode: "custom"
                            line_color_focus: blue
                            input_filter: "float"
                            on_text_validate:
                                finput.required = True if finput.text == "" else False
                                root._next_feature(label, finput)
                                finput.focus = True
                                displ.text = str(root._features)
                        
                        MDRaisedButton:
                            markup: True
                            text: 'next'
                            text_color: (1, 1, 1, .95)
                            md_bg_color: blue
                            pos_hint: {"center_y": .45}
                            on_press:
                                finput.required = True if finput.text == "" else False
                                finput.focus = True
                            on_release:
                                root._next_feature(label, finput)
                    
                    MDRaisedButton:
                        markup: True
                        text: 'or load all features from csv'
                        text_color: (1, 1, 1, .95)
                        md_bg_color: blue
                        pos_hint: {"center_y": .2, "center_x": .5}
                        on_release:
                            root._file_chooser()

    Screen:
        name: "screen3" 
        BoxLayout:
            orientation:'vertical'
            RelativeLayout:
                size_hint_y: .1
                canvas.before:
                    Color:
                        rgba: transparent_blue
                    Rectangle:
                        size: self.size
                MDIconButton:
                    icon: "arrow-left-bold"
                    pos_hint: {'center_y': .5}
                    theme_text_color: "Custom"
                    text_color: blue
                    on_release: 
                        root.transition.direction = "right"
                        root.current = "screen2"
                
                Label:
                    markup: True
                    text:'[b]ESTIMATING[/b]'
                    pos_hint: {"center_x": .5 if root.width > 500 else .4}
                    color: grey
                    font_size: "20dp"
            ScrollView:
                MDList:
                    id: lbx
                    padding: ('50dp', '100dp', '50dp', '50dp')
                    size_hint_y:None
                    MDLabel:
                        markup: True
                        id: report
                        theme_text_color: "Custom"
                        halign: "center"
                        on_texture_size:
                            lbx.height = dp(self.texture_size[1] + 20)
            
                    


    Screen:
        name: "screen4" 
        BoxLayout:
            orientation:'vertical'
            RelativeLayout:
                size_hint_y: .1
                canvas.before:
                    Color:
                        rgba: transparent_blue
                    Rectangle:
                        size: self.size
                MDIconButton:
                    icon: "arrow-left-bold"
                    pos_hint: {'center_y': .5}
                    theme_text_color: "Custom"
                    text_color: blue
                    on_release: 
                        root.transition.direction = "right"
                        root.current = "screen1"
                
                Label:
                    markup: True
                    text:'[b]OOOPS[/b]'
                    pos_hint: {"center_x": .5 if root.width > 500 else .4}
                    color: grey
                    font_size: "20dp"
            MDLabel:
                markup: True
                text: '[b][color=#ff0000]Sorry, [/color][/b]\nthe [b]Artificial Nueral Network [/b]is under development... \nPlease use the Statistical model based on the [b]Support Vector Machines (Classifier)[/b]'
                halign: "center"
                font_size: "30dp"
                size_hint_x: None
                width: root.width - root.width/6
                pos_hint: {"center_x": .5}

                                
                    
                   